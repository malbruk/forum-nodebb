{"version":3,"sources":["node_modules/nodebb-plugin-composer-default/static/lib/composer/scheduler.js"],"names":["define","Benchpress","bootbox","scheduler","state","timestamp","open","edit","posts","displayBtnCons","displayBtns","submitBtn","el","icon","defaultText","activeText","dateInput","timeInput","$","window","on","handleOnActivate","init","$postContainer","querySelectorAll","querySelector","lastChild","textContent","getAttribute","forEach","addEventListener","openModal","getTimestamp","isActive","isNaN","isOpen","reset","onChangeCategory","categoryData","toggleDisplayButtons","privileges","toggleItems","async","html","render","dialog","message","title","className","onShown","initModal","onHidden","handleOnHidden","onEscape","buttons","cancel","label","callback","cancelScheduling","set","setTimestamp","ev","schedulerContainer","target","initDateTimeInputs","post_uuid","postData","isMain","Date","now","d","nowLocalISO","getTime","getTimezoneOffset","toJSON","setAttribute","slice","scheduleDate","value","bothFilled","app","alert","type","timeout","alert_id","active","btn","classList","toggle","show"],"mappings":"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","file":"node_modules/nodebb-plugin-composer-default/static/lib/composer/scheduler.js","sourcesContent":["'use strict';\n\n/* globals $, app, define, window */\n\ndefine('composer/scheduler', ['benchpress', 'bootbox'], function (Benchpress, bootbox) {\n\tconst scheduler = {};\n\tconst state = {\n\t\ttimestamp: 0,\n\t\topen: false,\n\t\tedit: false,\n\t\tposts: {},\n\t};\n\tlet displayBtnCons = [];\n\tlet displayBtns;\n\tconst submitBtn = {\n\t\tel: null,\n\t\ticon: null,\n\t\tdefaultText: '',\n\t\tactiveText: '',\n\t};\n\tlet dateInput;\n\tlet timeInput;\n\n\t$(window).on('action:composer.activate', handleOnActivate);\n\n\tscheduler.init = function ($postContainer, posts) {\n\t\tstate.timestamp = 0;\n\t\tstate.posts = posts;\n\n\t\tdisplayBtnCons = $postContainer[0].querySelectorAll('.display-scheduler');\n\t\tdisplayBtns = $postContainer[0].querySelectorAll('.display-scheduler i');\n\n\t\tsubmitBtn.el = $postContainer[0].querySelector('.composer-submit:not(.btn-sm)');\n\t\tsubmitBtn.icon = submitBtn.el.querySelector('i');\n\t\tsubmitBtn.defaultText = submitBtn.el.lastChild.textContent;\n\t\tsubmitBtn.activeText = submitBtn.el.getAttribute('data-text-variant');\n\n\t\tdisplayBtns.forEach(el => el.addEventListener('click', openModal));\n\t};\n\n\tscheduler.getTimestamp = function () {\n\t\tif (!scheduler.isActive() || isNaN(state.timestamp)) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn state.timestamp;\n\t};\n\n\tscheduler.isActive = function () {\n\t\treturn state.timestamp > 0;\n\t};\n\n\tscheduler.isOpen = function () {\n\t\treturn state.open;\n\t};\n\n\tscheduler.reset = function () {\n\t\tstate.timestamp = 0;\n\t};\n\n\tscheduler.onChangeCategory = function (categoryData) {\n\t\ttoggleDisplayButtons(categoryData.privileges['topics:schedule']);\n\t\ttoggleItems(false);\n\t\tscheduler.reset();\n\t};\n\n\tasync function openModal() {\n\t\tconst html = await Benchpress.render('modals/topic-scheduler');\n\t\tbootbox.dialog({\n\t\t\tmessage: html,\n\t\t\ttitle: '[[modules:composer.schedule-for]]',\n\t\t\tclassName: 'topic-scheduler',\n\t\t\tonShown: initModal,\n\t\t\tonHidden: handleOnHidden,\n\t\t\tonEscape: true,\n\t\t\tbuttons: {\n\t\t\t\tcancel: {\n\t\t\t\t\tlabel: state.timestamp ? '[[modules:composer.cancel-scheduling]]' : '[[modules:bootbox.cancel]]',\n\t\t\t\t\tclassName: (state.timestamp ? 'btn-warning' : 'btn-default') + (state.edit ? ' hidden' : ''),\n\t\t\t\t\tcallback: cancelScheduling,\n\t\t\t\t},\n\t\t\t\tset: {\n\t\t\t\t\tlabel: '[[modules:composer.set-schedule-date]]',\n\t\t\t\t\tclassName: 'btn-primary',\n\t\t\t\t\tcallback: setTimestamp,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tfunction initModal(ev) {\n\t\tstate.open = true;\n\t\tconst schedulerContainer = ev.target.querySelector('.datetime-picker');\n\t\tdateInput = schedulerContainer.querySelector('input[type=\"date\"]');\n\t\ttimeInput = schedulerContainer.querySelector('input[type=\"time\"]');\n\t\tinitDateTimeInputs();\n\t}\n\n\tfunction handleOnHidden() {\n\t\tstate.open = false;\n\t}\n\n\tfunction handleOnActivate(ev, { post_uuid }) {\n\t\tstate.edit = false;\n\n\t\tconst postData = state.posts[post_uuid];\n\t\tif (postData && postData.isMain && postData.timestamp > Date.now()) {\n\t\t\tstate.timestamp = postData.timestamp;\n\t\t\tstate.edit = true;\n\t\t\ttoggleItems();\n\t\t}\n\t}\n\n\tfunction initDateTimeInputs() {\n\t\tconst d = new Date();\n\t\t// Update min. selectable date and time\n\t\tconst nowLocalISO = new Date(d.getTime() - (d.getTimezoneOffset() * 60000)).toJSON();\n\t\tdateInput.setAttribute('min', nowLocalISO.slice(0, 10));\n\t\ttimeInput.setAttribute('min', nowLocalISO.slice(11, -8));\n\n\t\tif (scheduler.isActive()) {\n\t\t\tconst scheduleDate = new Date(state.timestamp - (d.getTimezoneOffset() * 60000)).toJSON();\n\t\t\tdateInput.value = scheduleDate.slice(0, 10);\n\t\t\ttimeInput.value = scheduleDate.slice(11, -8);\n\t\t}\n\t}\n\n\tfunction setTimestamp() {\n\t\tconst bothFilled = dateInput.value && timeInput.value;\n\t\tconst timestamp = new Date(`${dateInput.value} ${timeInput.value}`).getTime();\n\t\tif (!bothFilled || isNaN(timestamp) || timestamp < Date.now()) {\n\t\t\tstate.timestamp = 0;\n\t\t\tconst message = timestamp < Date.now() ? '[[error:scheduling-to-past]]' : '[[error:invalid-schedule-date]]';\n\t\t\tapp.alert({\n\t\t\t\ttype: 'danger',\n\t\t\t\ttimeout: 3000,\n\t\t\t\ttitle: '',\n\t\t\t\talert_id: 'post_error',\n\t\t\t\tmessage,\n\t\t\t});\n\t\t\treturn false;\n\t\t}\n\t\tif (!state.timestamp) {\n\t\t\ttoggleItems(true);\n\t\t}\n\t\tstate.timestamp = timestamp;\n\t}\n\n\tfunction cancelScheduling() {\n\t\tif (!state.timestamp) {\n\t\t\treturn;\n\t\t}\n\t\ttoggleItems(false);\n\t\tstate.timestamp = 0;\n\t}\n\n\tfunction toggleItems(active = true) {\n\t\tdisplayBtns.forEach(btn => btn.classList.toggle('active', active));\n\t\tif (submitBtn.icon) {\n\t\t\tsubmitBtn.icon.classList.toggle('fa-check', !active);\n\t\t\tsubmitBtn.icon.classList.toggle('fa-clock-o', active);\n\t\t}\n\t\t// Toggle submit button text\n\t\tsubmitBtn.el.lastChild.textContent = active ? submitBtn.activeText : submitBtn.defaultText;\n\t}\n\n\tfunction toggleDisplayButtons(show) {\n\t\tdisplayBtnCons.forEach(btn => btn.classList.toggle('hidden', !show));\n\t}\n\n\treturn scheduler;\n});\n"]}