{"version":3,"sources":["public/src/modules/settings.js"],"names":["define","hooks","DEFAULT_PLUGINS","Settings","onReady","waitingJobs","helper","getHook","type","name","hook","plugin","$","data","attr","prop","plugins","toLowerCase","deepClone","obj","JSON","parse","stringify","createElement","tagName","text","element","document","k","hasOwnProperty","setAttribute","appendChild","createTextNode","initElement","call","destructElement","createElementOfType","cleanArray","array","trim","empty","cleaned","i","length","value","push","isTrue","isFalse","readValue","split","val","undefined","fillField","Array","join","toString","initFields","wrapper","each","ignored","field","keyParts","get","part","registerReadyJobs","amount","beforeReadyJobsDecreased","whenReady","callback","serializeForm","formEl","values","serializeObject","find","idx","inputEl","is","selectEl","persistSettings","hash","settings","notify","_","socket","emit","err","app","alert","title","message","timeout","use","_error","cfg","registerPlugin","service","types","set","sync","persist","notSaved","fields","toArray","parentCfg","lastKey","j","load","key","e","ajaxify","el","deserialize","this","parents","toggleClass","fire","on","flags","_unsaved","saveEl","getElementById","require","mousetrap","bind","ev","click","preventDefault","save","list","item","arguments"],"mappings":"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","file":"public/src/modules/settings.js","sourcesContent":["'use strict';\r\n\r\n\r\ndefine('settings', ['hooks'], function (hooks) {\r\n\tvar DEFAULT_PLUGINS = [\r\n\t\t'settings/checkbox',\r\n\t\t'settings/number',\r\n\t\t'settings/textarea',\r\n\t\t'settings/select',\r\n\t\t'settings/array',\r\n\t\t'settings/key',\r\n\t\t'settings/object',\r\n\t\t'settings/sorted-list',\r\n\t];\r\n\r\n\tvar Settings;\r\n\tvar onReady = [];\r\n\tvar waitingJobs = 0;\r\n\tvar helper;\r\n\r\n\t/**\r\n\t Returns the hook of given name that matches the given type or element.\r\n\t @param type The type of the element to get the matching hook for, or the element itself.\r\n\t @param name The name of the hook.\r\n\t */\r\n\tfunction getHook(type, name) {\r\n\t\tvar hook;\r\n\t\tvar plugin;\r\n\t\tif (typeof type !== 'string') {\r\n\t\t\ttype = $(type);\r\n\t\t\ttype = type.data('type') || type.attr('type') || type.prop('tagName');\r\n\t\t}\r\n\t\tplugin = Settings.plugins[type.toLowerCase()];\r\n\t\tif (plugin == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\thook = plugin[name];\r\n\t\tif (typeof hook === 'function') {\r\n\t\t\treturn hook;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\thelper = {\r\n\t\t/**\r\n\t\t @returns Object A deep clone of the given object.\r\n\t\t */\r\n\t\tdeepClone: function (obj) {\r\n\t\t\tif (typeof obj === 'object') {\r\n\t\t\t\treturn JSON.parse(JSON.stringify(obj));\r\n\t\t\t}\r\n\t\t\treturn obj;\r\n\t\t},\r\n\t\t/**\r\n\t\t Creates a new Element with given data.\r\n\t\t @param tagName The tag-name of the element to create.\r\n\t\t @param data The attributes to set.\r\n\t\t @param text The text to add into the element.\r\n\t\t @returns HTMLElement The created element.\r\n\t\t */\r\n\t\tcreateElement: function (tagName, data, text) {\r\n\t\t\tvar element = document.createElement(tagName);\r\n\t\t\tfor (var k in data) {\r\n\t\t\t\tif (data.hasOwnProperty(k)) {\r\n\t\t\t\t\telement.setAttribute(k, data[k]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (text) {\r\n\t\t\t\telement.appendChild(document.createTextNode(text));\r\n\t\t\t}\r\n\t\t\treturn element;\r\n\t\t},\r\n\t\t/**\r\n\t\t Calls the init-hook of the given element.\r\n\t\t @param element The element to initialize.\r\n\t\t */\r\n\t\tinitElement: function (element) {\r\n\t\t\tvar hook = getHook(element, 'init');\r\n\t\t\tif (hook != null) {\r\n\t\t\t\thook.call(Settings, $(element));\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t Calls the destruct-hook of the given element.\r\n\t\t @param element The element to destruct.\r\n\t\t */\r\n\t\tdestructElement: function (element) {\r\n\t\t\tvar hook = getHook(element, 'destruct');\r\n\t\t\tif (hook != null) {\r\n\t\t\t\thook.call(Settings, $(element));\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t Creates and initializes a new element.\r\n\t\t @param type The type of the new element.\r\n\t\t @param tagName The tag-name of the new element.\r\n\t\t @param data The data to forward to create-hook or use as attributes.\r\n\t\t @returns JQuery The created element.\r\n\t\t */\r\n\t\tcreateElementOfType: function (type, tagName, data) {\r\n\t\t\tvar element;\r\n\t\t\tvar hook = getHook(type, 'create');\r\n\t\t\tif (hook != null) {\r\n\t\t\t\telement = $(hook.call(Settings, type, tagName, data));\r\n\t\t\t} else {\r\n\t\t\t\tif (data == null) {\r\n\t\t\t\t\tdata = {};\r\n\t\t\t\t}\r\n\t\t\t\tif (type != null) {\r\n\t\t\t\t\tdata.type = type;\r\n\t\t\t\t}\r\n\t\t\t\telement = $(helper.createElement(tagName || 'input', data));\r\n\t\t\t}\r\n\t\t\telement.data('type', type);\r\n\t\t\thelper.initElement(element);\r\n\t\t\treturn element;\r\n\t\t},\r\n\t\t/**\r\n\t\t Creates a new Array that contains values of given Array depending on trim and empty.\r\n\t\t @param array The array to clean.\r\n\t\t @param trim Whether to trim each value if it has a trim-function.\r\n\t\t @param empty Whether empty values should get added.\r\n\t\t @returns Array The filtered and/or modified Array.\r\n\t\t */\r\n\t\tcleanArray: function (array, trim, empty) {\r\n\t\t\tvar cleaned = [];\r\n\t\t\tif (!trim && empty) {\r\n\t\t\t\treturn array;\r\n\t\t\t}\r\n\t\t\tfor (var i = 0; i < array.length; i += 1) {\r\n\t\t\t\tvar value = array[i];\r\n\t\t\t\tif (trim) {\r\n\t\t\t\t\tif (value === !!value) {\r\n\t\t\t\t\t\tvalue = +value;\r\n\t\t\t\t\t} else if (value && typeof value.trim === 'function') {\r\n\t\t\t\t\t\tvalue = value.trim();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (empty || (value != null && value.length)) {\r\n\t\t\t\t\tcleaned.push(value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn cleaned;\r\n\t\t},\r\n\t\tisTrue: function (value) {\r\n\t\t\treturn value === 'true' || +value === 1;\r\n\t\t},\r\n\t\tisFalse: function (value) {\r\n\t\t\treturn value === 'false' || +value === 0;\r\n\t\t},\r\n\t\t/**\r\n\t\t Calls the get-hook of the given element and returns its result.\r\n\t\t If no hook is specified it gets treated as input-field.\r\n\t\t @param element The element of that the value should get read.\r\n\t\t @returns Object The value of the element.\r\n\t\t */\r\n\t\treadValue: function (element) {\r\n\t\t\tvar empty = !helper.isFalse(element.data('empty'));\r\n\t\t\tvar trim = !helper.isFalse(element.data('trim'));\r\n\t\t\tvar split = element.data('split');\r\n\t\t\tvar hook = getHook(element, 'get');\r\n\t\t\tvar value;\r\n\t\t\tif (hook != null) {\r\n\t\t\t\treturn hook.call(Settings, element, trim, empty);\r\n\t\t\t}\r\n\t\t\tif (split != null) {\r\n\t\t\t\tempty = helper.isTrue(element.data('empty')); // default empty-value is false for arrays\r\n\t\t\t\tvalue = element.val();\r\n\t\t\t\tvar array = (value != null && value.split(split || ',')) || [];\r\n\t\t\t\treturn helper.cleanArray(array, trim, empty);\r\n\t\t\t}\r\n\t\t\tvalue = element.val();\r\n\t\t\tif (trim && value != null && typeof value.trim === 'function') {\r\n\t\t\t\tvalue = value.trim();\r\n\t\t\t}\r\n\t\t\tif (empty || (value !== undefined && (value == null || value.length !== 0))) {\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t Calls the set-hook of the given element.\r\n\t\t If no hook is specified it gets treated as input-field.\r\n\t\t @param element The JQuery-Object of the element to fill.\r\n\t\t @param value The value to set.\r\n\t\t */\r\n\t\tfillField: function (element, value) {\r\n\t\t\tvar hook = getHook(element, 'set');\r\n\t\t\tvar trim = element.data('trim');\r\n\t\t\ttrim = trim !== 'false' && +trim !== 0;\r\n\t\t\tif (hook != null) {\r\n\t\t\t\treturn hook.call(Settings, element, value, trim);\r\n\t\t\t}\r\n\t\t\tif (value instanceof Array) {\r\n\t\t\t\tvalue = value.join(element.data('split') || (trim ? ', ' : ','));\r\n\t\t\t}\r\n\t\t\tif (trim && value && typeof value.trim === 'function') {\r\n\t\t\t\tvalue = value.trim();\r\n\t\t\t\tif (typeof value.toString === 'function') {\r\n\t\t\t\t\tvalue = value.toString();\r\n\t\t\t\t}\r\n\t\t\t} else if (value != null) {\r\n\t\t\t\tif (typeof value.toString === 'function') {\r\n\t\t\t\t\tvalue = value.toString();\r\n\t\t\t\t}\r\n\t\t\t\tif (trim) {\r\n\t\t\t\t\tvalue = value.trim();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvalue = '';\r\n\t\t\t}\r\n\t\t\tif (value !== undefined) {\r\n\t\t\t\telement.val(value);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t Calls the init-hook and {@link helper.fillField} on each field within wrapper-object.\r\n\t\t @param wrapper The wrapper-element to set settings within.\r\n\t\t */\r\n\t\tinitFields: function (wrapper) {\r\n\t\t\t$('[data-key]', wrapper).each(function (ignored, field) {\r\n\t\t\t\tfield = $(field);\r\n\t\t\t\tvar hook = getHook(field, 'init');\r\n\t\t\t\tvar keyParts = field.data('key').split('.');\r\n\t\t\t\tvar value = Settings.get();\r\n\t\t\t\tif (hook != null) {\r\n\t\t\t\t\thook.call(Settings, field);\r\n\t\t\t\t}\r\n\t\t\t\tfor (var i = 0; i < keyParts.length; i += 1) {\r\n\t\t\t\t\tvar part = keyParts[i];\r\n\t\t\t\t\tif (part && value != null) {\r\n\t\t\t\t\t\tvalue = value[part];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\thelper.fillField(field, value);\r\n\t\t\t});\r\n\t\t},\r\n\t\t/**\r\n\t\t Increases the amount of jobs before settings are ready by given amount.\r\n\t\t @param amount The amount of jobs to register.\r\n\t\t */\r\n\t\tregisterReadyJobs: function (amount) {\r\n\t\t\twaitingJobs += amount;\r\n\t\t\treturn waitingJobs;\r\n\t\t},\r\n\t\t/**\r\n\t\t Decreases the amount of jobs before settings are ready by given amount or 1.\r\n\t\t If the amount is less or equal 0 all callbacks registered by {@link helper.whenReady} get called.\r\n\t\t @param amount The amount of jobs that finished.\r\n\t\t */\r\n\t\tbeforeReadyJobsDecreased: function (amount) {\r\n\t\t\tif (amount == null) {\r\n\t\t\t\tamount = 1;\r\n\t\t\t}\r\n\t\t\tif (waitingJobs > 0) {\r\n\t\t\t\twaitingJobs -= amount;\r\n\t\t\t\tif (waitingJobs <= 0) {\r\n\t\t\t\t\tfor (var i = 0; i < onReady.length; i += 1) {\r\n\t\t\t\t\t\tonReady[i]();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonReady = [];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t Calls the given callback when the settings are ready.\r\n\t\t @param callback The callback.\r\n\t\t */\r\n\t\twhenReady: function (callback) {\r\n\t\t\tif (waitingJobs <= 0) {\r\n\t\t\t\tcallback();\r\n\t\t\t} else {\r\n\t\t\t\tonReady.push(callback);\r\n\t\t\t}\r\n\t\t},\r\n\t\tserializeForm: function (formEl) {\r\n\t\t\tvar values = formEl.serializeObject();\r\n\r\n\t\t\t// \"Fix\" checkbox values, so that unchecked options are not omitted\r\n\t\t\tformEl.find('input[type=\"checkbox\"]').each(function (idx, inputEl) {\r\n\t\t\t\tinputEl = $(inputEl);\r\n\t\t\t\tif (!inputEl.is(':checked')) {\r\n\t\t\t\t\tvalues[inputEl.attr('name')] = 'off';\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// save multiple selects as json arrays\r\n\t\t\tformEl.find('select[multiple]').each(function (idx, selectEl) {\r\n\t\t\t\tselectEl = $(selectEl);\r\n\t\t\t\tvalues[selectEl.attr('name')] = JSON.stringify(selectEl.val());\r\n\t\t\t});\r\n\r\n\t\t\treturn values;\r\n\t\t},\r\n\t\t/**\r\n\t\t Persists the given settings with given hash.\r\n\t\t @param hash The hash to use as settings-id.\r\n\t\t @param settings The settings-object to persist.\r\n\t\t @param notify Whether to send notification when settings got saved.\r\n\t\t @param callback The callback to call when done.\r\n\t\t */\r\n\t\tpersistSettings: function (hash, settings, notify, callback) {\r\n\t\t\tif (settings != null && settings._ != null && typeof settings._ !== 'string') {\r\n\t\t\t\tsettings = helper.deepClone(settings);\r\n\t\t\t\tsettings._ = JSON.stringify(settings._);\r\n\t\t\t}\r\n\t\t\tsocket.emit('admin.settings.set', {\r\n\t\t\t\thash: hash,\r\n\t\t\t\tvalues: settings,\r\n\t\t\t}, function (err) {\r\n\t\t\t\tif (notify) {\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\tapp.alert({\r\n\t\t\t\t\t\t\ttitle: 'Settings Not Saved',\r\n\t\t\t\t\t\t\ttype: 'danger',\r\n\t\t\t\t\t\t\tmessage: 'NodeBB failed to save the settings.',\r\n\t\t\t\t\t\t\ttimeout: 5000,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tapp.alert({\r\n\t\t\t\t\t\t\ttitle: 'Settings Saved',\r\n\t\t\t\t\t\t\ttype: 'success',\r\n\t\t\t\t\t\t\tmessage: 'Settings have been successfully saved',\r\n\t\t\t\t\t\t\ttimeout: 2500,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof callback === 'function') {\r\n\t\t\t\t\tcallback(err);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\t/**\r\n\t\t Sets the settings to use to given settings.\r\n\t\t @param settings The settings to use.\r\n\t\t */\r\n\t\tuse: function (settings) {\r\n\t\t\ttry {\r\n\t\t\t\tsettings._ = JSON.parse(settings._);\r\n\t\t\t} catch (_error) {}\r\n\t\t\tSettings.cfg = settings;\r\n\t\t},\r\n\t};\r\n\r\n\r\n\tSettings = {\r\n\t\thelper: helper,\r\n\t\tplugins: {},\r\n\t\tcfg: {},\r\n\r\n\t\t/**\r\n\t\t Returns the saved settings.\r\n\t\t @returns Object The settings.\r\n\t\t */\r\n\t\tget: function () {\r\n\t\t\tif (Settings.cfg != null && Settings.cfg._ !== undefined) {\r\n\t\t\t\treturn Settings.cfg._;\r\n\t\t\t}\r\n\t\t\treturn Settings.cfg;\r\n\t\t},\r\n\t\t/**\r\n\t\t Registers a new plugin and calls its use-hook.\r\n\t\t @param service The plugin to register.\r\n\t\t @param types The types to bind the plugin to.\r\n\t\t */\r\n\t\tregisterPlugin: function (service, types) {\r\n\t\t\tif (types == null) {\r\n\t\t\t\ttypes = service.types;\r\n\t\t\t} else {\r\n\t\t\t\tservice.types = types;\r\n\t\t\t}\r\n\t\t\tif (typeof service.use === 'function') {\r\n\t\t\t\tservice.use.call(Settings);\r\n\t\t\t}\r\n\t\t\tfor (var i = 0; i < types.length; i += 1) {\r\n\t\t\t\tvar type = types[i].toLowerCase();\r\n\t\t\t\tif (Settings.plugins[type] == null) {\r\n\t\t\t\t\tSettings.plugins[type] = service;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t Sets the settings to given ones, resets the fields within given wrapper and saves the settings server-side.\r\n\t\t @param hash The hash to use as settings-id.\r\n\t\t @param settings The settings to set.\r\n\t\t @param wrapper The wrapper-element to find settings within.\r\n\t\t @param callback The callback to call when done.\r\n\t\t @param notify Whether to send notification when settings got saved.\r\n\t\t */\r\n\t\tset: function (hash, settings, wrapper, callback, notify) {\r\n\t\t\tif (notify == null) {\r\n\t\t\t\tnotify = true;\r\n\t\t\t}\r\n\t\t\thelper.whenReady(function () {\r\n\t\t\t\thelper.use(settings);\r\n\t\t\t\thelper.initFields(wrapper || 'form');\r\n\t\t\t\thelper.persistSettings(hash, settings, notify, callback);\r\n\t\t\t});\r\n\t\t},\r\n\t\t/**\r\n\t\t Fetches the settings from server and calls {@link Settings.helper.initFields} once the settings are ready.\r\n\t\t @param hash The hash to use as settings-id.\r\n\t\t @param wrapper The wrapper-element to set settings within.\r\n\t\t @param callback The callback to call when done.\r\n\t\t */\r\n\t\tsync: function (hash, wrapper, callback) {\r\n\t\t\tsocket.emit('admin.settings.get', {\r\n\t\t\t\thash: hash,\r\n\t\t\t}, function (err, values) {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\tif (typeof callback === 'function') {\r\n\t\t\t\t\t\tcallback(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\thelper.whenReady(function () {\r\n\t\t\t\t\t\thelper.use(values);\r\n\t\t\t\t\t\thelper.initFields(wrapper || 'form');\r\n\t\t\t\t\t\tif (typeof callback === 'function') {\r\n\t\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\t/**\r\n\t\t Reads the settings from fields and saves them server-side.\r\n\t\t @param hash The hash to use as settings-id.\r\n\t\t @param wrapper The wrapper-element to find settings within.\r\n\t\t @param callback The callback to call when done.\r\n\t\t @param notify Whether to send notification when settings got saved.\r\n\t\t */\r\n\t\tpersist: function (hash, wrapper, callback, notify) {\r\n\t\t\tvar notSaved = [];\r\n\t\t\tvar fields = $('[data-key]', wrapper || 'form').toArray();\r\n\t\t\tif (notify == null) {\r\n\t\t\t\tnotify = true;\r\n\t\t\t}\r\n\t\t\tfor (var i = 0; i < fields.length; i += 1) {\r\n\t\t\t\tvar field = $(fields[i]);\r\n\t\t\t\tvar value = helper.readValue(field);\r\n\t\t\t\tvar parentCfg = Settings.get();\r\n\t\t\t\tvar keyParts = field.data('key').split('.');\r\n\t\t\t\tvar lastKey = keyParts[keyParts.length - 1];\r\n\t\t\t\tif (keyParts.length > 1) {\r\n\t\t\t\t\tfor (var j = 0; j < keyParts.length - 1; j += 1) {\r\n\t\t\t\t\t\tvar part = keyParts[j];\r\n\t\t\t\t\t\tif (part && parentCfg != null) {\r\n\t\t\t\t\t\t\tparentCfg = parentCfg[part];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (parentCfg != null) {\r\n\t\t\t\t\tif (value != null) {\r\n\t\t\t\t\t\tparentCfg[lastKey] = value;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdelete parentCfg[lastKey];\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnotSaved.push(field.data('key'));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (notSaved.length) {\r\n\t\t\t\tapp.alert({\r\n\t\t\t\t\ttitle: 'Attributes Not Saved',\r\n\t\t\t\t\tmessage: \"'\" + (notSaved.join(', ')) + \"' could not be saved. Please contact the plugin-author!\",\r\n\t\t\t\t\ttype: 'danger',\r\n\t\t\t\t\ttimeout: 5000,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\thelper.persistSettings(hash, Settings.cfg, notify, callback);\r\n\t\t},\r\n\t\tload: function (hash, formEl, callback) {\r\n\t\t\tcallback = callback || function () {};\r\n\t\t\tvar call = formEl.attr('data-socket-get');\r\n\r\n\t\t\tsocket.emit(call || 'admin.settings.get', {\r\n\t\t\t\thash: hash,\r\n\t\t\t}, function (err, values) {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\treturn callback(err);\r\n\t\t\t\t}\r\n\t\t\t\t// multipe selects are saved as json arrays, parse them here\r\n\t\t\t\t$(formEl).find('select[multiple]').each(function (idx, selectEl) {\r\n\t\t\t\t\tvar key = $(selectEl).attr('name');\r\n\t\t\t\t\tif (key && values.hasOwnProperty(key)) {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tvalues[key] = JSON.parse(values[key]);\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\t// Leave the value as is\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Save loaded settings into ajaxify.data for use client-side\r\n\t\t\t\tajaxify.data[call ? hash : 'settings'] = values;\r\n\r\n\t\t\t\thelper.whenReady(function () {\r\n\t\t\t\t\t$(formEl).find('[data-sorted-list]').each(function (idx, el) {\r\n\t\t\t\t\t\tgetHook(el, 'get').call(Settings, $(el), hash);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$(formEl).deserialize(values);\r\n\t\t\t\t$(formEl).find('input[type=\"checkbox\"]').each(function () {\r\n\t\t\t\t\t$(this).parents('.mdl-switch').toggleClass('is-checked', $(this).is(':checked'));\r\n\t\t\t\t});\r\n\t\t\t\thooks.fire('action:admin.settingsLoaded');\r\n\r\n\t\t\t\t// Handle unsaved changes\r\n\t\t\t\t$(formEl).on('change', 'input, select, textarea', function () {\r\n\t\t\t\t\tapp.flags = app.flags || {};\r\n\t\t\t\t\tapp.flags._unsaved = true;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar saveEl = document.getElementById('save');\r\n\t\t\t\tif (saveEl) {\r\n\t\t\t\t\trequire(['mousetrap'], function (mousetrap) {\r\n\t\t\t\t\t\tmousetrap.bind('ctrl+s', function (ev) {\r\n\t\t\t\t\t\t\tsaveEl.click();\r\n\t\t\t\t\t\t\tev.preventDefault();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcallback(null, values);\r\n\t\t\t});\r\n\t\t},\r\n\t\tsave: function (hash, formEl, callback) {\r\n\t\t\tformEl = $(formEl);\r\n\r\n\t\t\tif (formEl.length) {\r\n\t\t\t\tvar values = helper.serializeForm(formEl);\r\n\r\n\t\t\t\thelper.whenReady(function () {\r\n\t\t\t\t\tvar list = formEl.find('[data-sorted-list]');\r\n\t\t\t\t\tif (list.length) {\r\n\t\t\t\t\t\tlist.each((idx, item) => {\r\n\t\t\t\t\t\t\tgetHook(item, 'set').call(Settings, $(item), values);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar call = formEl.attr('data-socket-set');\r\n\t\t\t\tsocket.emit(call || 'admin.settings.set', {\r\n\t\t\t\t\thash: hash,\r\n\t\t\t\t\tvalues: values,\r\n\t\t\t\t}, function (err) {\r\n\t\t\t\t\t// Remove unsaved flag to re-enable ajaxify\r\n\t\t\t\t\tapp.flags._unsaved = false;\r\n\r\n\t\t\t\t\t// Also save to local ajaxify.data\r\n\t\t\t\t\tajaxify.data[call ? hash : 'settings'] = values;\r\n\r\n\t\t\t\t\tif (typeof callback === 'function') {\r\n\t\t\t\t\t\tcallback(err);\r\n\t\t\t\t\t} else if (err) {\r\n\t\t\t\t\t\tapp.alert({\r\n\t\t\t\t\t\t\ttitle: 'Error while saving settings',\r\n\t\t\t\t\t\t\ttype: 'error',\r\n\t\t\t\t\t\t\ttimeout: 2500,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tapp.alert({\r\n\t\t\t\t\t\t\ttitle: 'Settings Saved',\r\n\t\t\t\t\t\t\ttype: 'success',\r\n\t\t\t\t\t\t\ttimeout: 2500,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t};\r\n\r\n\r\n\thelper.registerReadyJobs(1);\r\n\trequire(DEFAULT_PLUGINS, function () {\r\n\t\tfor (var i = 0; i < arguments.length; i += 1) {\r\n\t\t\tSettings.registerPlugin(arguments[i]);\r\n\t\t}\r\n\t\thelper.beforeReadyJobsDecreased();\r\n\t});\r\n\r\n\treturn Settings;\r\n});\r\n"]}