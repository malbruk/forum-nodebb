"use strict";define("hooks",[],()=>{const e={loaded:{},temporary:new Set,deprecated:{"action:script.load":"filter:script.load"}};e.register=((r,o)=>{e.loaded[r]=e.loaded[r]||new Set;e.loaded[r].add(o);if(e.deprecated.hasOwnProperty(r)){const s=e.deprecated[r];if(s){console.groupCollapsed(`[hooks] Hook "${r}" is deprecated, please use "${s}" instead.`)}else{console.groupCollapsed(`[hooks] Hook "${r}" is deprecated, there is no alternative.`)}console.info(o);console.groupEnd()}console.debug(`[hooks] Registered ${r}`,o)});e.on=e.register;e.registerPage=((r,o)=>{e.temporary.add({hookName:r,method:o});e.register(r,o)});e.onPage=e.registerPage;e.register("action:ajaxify.start",()=>{e.temporary.forEach(r=>{e.unregister(r.hookName,r.method);e.temporary.delete(r)})});e.unregister=((r,o)=>{if(e.loaded[r]&&e.loaded[r].has(o)){e.loaded[r].delete(o);console.debug(`[hooks] Unregistered ${r}`,o)}else{console.debug(`[hooks] Unregistration of ${r} failed, passed-in method is not a registered listener or the hook itself has no listeners, currently.`)}});e.off=e.unregister;e.hasListeners=(r=>e.loaded[r]&&e.loaded[r].size>0);const r=(e,r,o)=>{console.warn(`[hooks] Exception encountered in ${r.name?r.name:"anonymous function"}, stack trace follows.`);console.error(e);return Promise.resolve(o)};const o=(o,s)=>{if(!e.hasListeners(o)){return Promise.resolve(s)}const t=Array.from(e.loaded[o]);return t.reduce((e,o)=>e.then(e=>{try{const s=o(e);return utils.isPromise(s)?s.then(e=>Promise.resolve(e)).catch(s=>r(s,o,e)):s}catch(s){return r(s,o,e)}}),Promise.resolve(s))};const s=(r,o)=>{if(e.hasListeners(r)){e.loaded[r].forEach(e=>e(o))}$(window).trigger(r,o)};const t=(o,s)=>{if(!e.hasListeners(o)){return Promise.resolve(s)}const t=Array.from(e.loaded[o]);return Promise.allSettled(t.map(e=>{try{return e(s)}catch(o){return r(o,e)}})).then(()=>Promise.resolve(s))};e.fire=((e,r)=>{const n=e.split(":").shift();switch(n){case"filter":return o(e,r);case"action":return s(e,r);case"static":return t(e,r)}});return e});
//# sourceMappingURL=hooks.js.map