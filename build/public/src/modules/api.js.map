{"version":3,"sources":["public/src/modules/api.js"],"names":["define","hooks","api","baseUrl","config","relative_path","call","options","callback","url","startsWith","async","doAjax","cb","fire","$","ajax","done","res","hasOwnProperty","response","fail","ev","errMessage","responseJSON","status","message","error","Error","statusText","Promise","resolve","reject","err","data","get","route","payload","onSuccess","Object","keys","length","param","head","method","post","JSON","stringify","contentType","headers","x-csrf-token","csrf_token","put","del","delete"],"mappings":"AAAA,aAEAA,OAAO,OAAQ,SAAWC,IACzB,MAAMC,KACN,MAAMC,EAAUC,OAAOC,cAAgB,UAEvC,SAASC,EAAKC,EAASC,GACtBD,EAAQE,IAAMF,EAAQE,IAAIC,WAAW,QACpCN,OAAOC,cAAgBE,EAAQE,IAC/BN,EAAUI,EAAQE,IAEnBE,eAAeC,EAAOC,KAElBN,QAAAA,SAAkBN,EAAMa,KAAK,sBAAwBP,QAAAA,KAExDQ,EAAEC,KAAKT,GACLU,KAAMC,IACNL,EAAG,KACFK,GACAA,EAAIC,eAAe,WACnBD,EAAIC,eAAe,YAAcD,EAAIE,SAAYF,SAGlDG,KAAMC,IACN,IAAIC,EACJ,GAAID,EAAGE,aAAc,CACpBD,EAAaD,EAAGE,aAAaC,QAAUH,EAAGE,aAAaC,OAAOC,QAC7DJ,EAAGE,aAAaC,OAAOC,QACvBJ,EAAGE,aAAaG,MAGlBd,EAAG,IAAIe,MAAML,GAAcD,EAAGO,eAIjC,UAAWrB,IAAa,WAAY,CACnCI,EAAOJ,GACP,OAGD,OAAO,IAAIsB,QAAQ,CAACC,EAASC,KAC5BpB,EAAO,SAAUqB,EAAKC,GACrB,GAAID,EAAKD,EAAOC,QACXF,EAAQG,OAKhBhC,EAAIiC,IAAM,EAACC,EAAOC,EAASC,IAAchC,GACxCG,IAAK2B,GAASG,OAAOC,KAAKH,GAASI,OAAU,IAAM1B,EAAE2B,MAAML,GAAY,KACrEC,IAEHpC,EAAIyC,KAAO,EAACP,EAAOC,EAASC,IAAchC,GACzCG,IAAK2B,GAASG,OAAOC,KAAKH,GAASI,OAAU,IAAM1B,EAAE2B,MAAML,GAAY,IACvEO,OAAQ,QACNN,IAEHpC,EAAI2C,KAAO,EAACT,EAAOC,EAASC,IAAchC,GACzCG,IAAK2B,EACLQ,OAAQ,OACRV,KAAMY,KAAKC,UAAUV,GACrBW,YAAa,kCACbC,SACCC,eAAgB9C,OAAO+C,aAEtBb,IAEHpC,EAAIkD,IAAM,EAAChB,EAAOC,EAASC,IAAchC,GACxCG,IAAK2B,EACLQ,OAAQ,MACRV,KAAMY,KAAKC,UAAUV,GACrBW,YAAa,kCACbC,SACCC,eAAgB9C,OAAO+C,aAEtBb,IAEHpC,EAAImD,IAAM,EAACjB,EAAOC,EAASC,IAAchC,GACxCG,IAAK2B,EACLQ,OAAQ,SACRV,KAAMY,KAAKC,UAAUV,GACrBW,YAAa,kCACbC,SACCC,eAAgB9C,OAAO+C,aAEtBb,IACHpC,EAAIoD,OAASpD,EAAImD,IAEjB,OAAOnD","file":"public/src/modules/api.js","sourcesContent":["'use strict';\r\n\r\ndefine('api', ['hooks'], (hooks) => {\r\n\tconst api = {};\r\n\tconst baseUrl = config.relative_path + '/api/v3';\r\n\r\n\tfunction call(options, callback) {\r\n\t\toptions.url = options.url.startsWith('/api') ?\r\n\t\t\tconfig.relative_path + options.url :\r\n\t\t\tbaseUrl + options.url;\r\n\r\n\t\tasync function doAjax(cb) {\r\n\t\t\t// Allow options to be modified by plugins, etc.\r\n\t\t\t({ options } = await hooks.fire('filter:api.options', { options }));\r\n\r\n\t\t\t$.ajax(options)\r\n\t\t\t\t.done((res) => {\r\n\t\t\t\t\tcb(null, (\r\n\t\t\t\t\t\tres &&\r\n\t\t\t\t\t\tres.hasOwnProperty('status') &&\r\n\t\t\t\t\t\tres.hasOwnProperty('response') ? res.response : (res || {})\r\n\t\t\t\t\t));\r\n\t\t\t\t})\r\n\t\t\t\t.fail((ev) => {\r\n\t\t\t\t\tlet errMessage;\r\n\t\t\t\t\tif (ev.responseJSON) {\r\n\t\t\t\t\t\terrMessage = ev.responseJSON.status && ev.responseJSON.status.message ?\r\n\t\t\t\t\t\t\tev.responseJSON.status.message :\r\n\t\t\t\t\t\t\tev.responseJSON.error;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcb(new Error(errMessage || ev.statusText));\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (typeof callback === 'function') {\r\n\t\t\tdoAjax(callback);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tdoAjax(function (err, data) {\r\n\t\t\t\tif (err) reject(err);\r\n\t\t\t\telse resolve(data);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tapi.get = (route, payload, onSuccess) => call({\r\n\t\turl: route + (Object.keys(payload).length ? ('?' + $.param(payload)) : ''),\r\n\t}, onSuccess);\r\n\r\n\tapi.head = (route, payload, onSuccess) => call({\r\n\t\turl: route + (Object.keys(payload).length ? ('?' + $.param(payload)) : ''),\r\n\t\tmethod: 'head',\r\n\t}, onSuccess);\r\n\r\n\tapi.post = (route, payload, onSuccess) => call({\r\n\t\turl: route,\r\n\t\tmethod: 'post',\r\n\t\tdata: JSON.stringify(payload),\r\n\t\tcontentType: 'application/json; charset=utf-8',\r\n\t\theaders: {\r\n\t\t\t'x-csrf-token': config.csrf_token,\r\n\t\t},\r\n\t}, onSuccess);\r\n\r\n\tapi.put = (route, payload, onSuccess) => call({\r\n\t\turl: route,\r\n\t\tmethod: 'put',\r\n\t\tdata: JSON.stringify(payload),\r\n\t\tcontentType: 'application/json; charset=utf-8',\r\n\t\theaders: {\r\n\t\t\t'x-csrf-token': config.csrf_token,\r\n\t\t},\r\n\t}, onSuccess);\r\n\r\n\tapi.del = (route, payload, onSuccess) => call({\r\n\t\turl: route,\r\n\t\tmethod: 'delete',\r\n\t\tdata: JSON.stringify(payload),\r\n\t\tcontentType: 'application/json; charset=utf-8',\r\n\t\theaders: {\r\n\t\t\t'x-csrf-token': config.csrf_token,\r\n\t\t},\r\n\t}, onSuccess);\r\n\tapi.delete = api.del;\r\n\r\n\treturn api;\r\n});\r\n"]}