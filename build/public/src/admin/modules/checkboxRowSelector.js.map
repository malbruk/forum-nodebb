{"version":3,"sources":["public/src/admin/modules/checkboxRowSelector.js"],"names":["define","self","$tableContainer","toggling","init","tableCssSelector","$","on","handleChange","updateAll","find","each","idx","el","updateState","$checkboxEl","checkboxes","closest","toArray","$toggler","shift","rowState","length","every","checked","prop","ev","target","toggleAll","state","$checkbox","click"],"mappings":"AAAA,aAEAA,OAAO,oCAAqC,WAC3C,MAAMC,KACN,IAAIC,EAEJD,EAAKE,SAAW,MAEhBF,EAAKG,KAAO,SAAUC,GACrBH,EAAkBI,EAAED,GACpBH,EAAgBK,GAAG,SAAU,wBAAyBC,IAGvDP,EAAKQ,UAAY,WAChBP,EAAgBQ,KAAK,yBAAyBC,KAAK,CAACC,EAAKC,KACxDZ,EAAKa,YAAYR,EAAEO,OAIrBZ,EAAKa,YAAc,SAAUC,GAC5B,GAAId,EAAKE,SAAU,CAClB,OAED,MAAMa,EAAaD,EAAYE,QAAQ,MAAMP,KAAK,yBAAyBQ,UAC3E,MAAMC,EAAWb,EAAEU,EAAWI,SAC9B,MAAMC,EAAWL,EAAWM,QAAUN,EAAWO,MAAMV,GAAMA,EAAGW,SAChEL,EAASM,KAAK,UAAWJ,IAG1B,SAASb,EAAakB,GACrB,MAAMX,EAAcT,EAAEoB,EAAGC,QACzBC,EAAUb,GAGX,SAASa,EAAUb,GAClBd,EAAKE,SAAW,KAChB,MAAM0B,EAAQd,EAAYU,KAAK,WAC/BV,EAAYE,QAAQ,MAAMP,KAAK,+BAA+BC,KAAK,CAACC,EAAKC,KACxE,MAAMiB,EAAYxB,EAAEO,GACpB,GAAIiB,EAAUL,KAAK,aAAeI,EAAO,CACxC,OAEDC,EAAUC,UAEX9B,EAAKE,SAAW,MAGjB,OAAOF","file":"public/src/admin/modules/checkboxRowSelector.js","sourcesContent":["'use strict';\r\n\r\ndefine('admin/modules/checkboxRowSelector', function () {\r\n\tconst self = {};\r\n\tlet $tableContainer;\r\n\r\n\tself.toggling = false;\r\n\r\n\tself.init = function (tableCssSelector) {\r\n\t\t$tableContainer = $(tableCssSelector);\r\n\t\t$tableContainer.on('change', 'input.checkbox-helper', handleChange);\r\n\t};\r\n\r\n\tself.updateAll = function () {\r\n\t\t$tableContainer.find('input.checkbox-helper').each((idx, el) => {\r\n\t\t\tself.updateState($(el));\r\n\t\t});\r\n\t};\r\n\r\n\tself.updateState = function ($checkboxEl) {\r\n\t\tif (self.toggling) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst checkboxes = $checkboxEl.closest('tr').find('input:not([disabled])').toArray();\r\n\t\tconst $toggler = $(checkboxes.shift());\r\n\t\tconst rowState = checkboxes.length && checkboxes.every(el => el.checked);\r\n\t\t$toggler.prop('checked', rowState);\r\n\t};\r\n\r\n\tfunction handleChange(ev) {\r\n\t\tconst $checkboxEl = $(ev.target);\r\n\t\ttoggleAll($checkboxEl);\r\n\t}\r\n\r\n\tfunction toggleAll($checkboxEl) {\r\n\t\tself.toggling = true;\r\n\t\tconst state = $checkboxEl.prop('checked');\r\n\t\t$checkboxEl.closest('tr').find('input:not(.checkbox-helper)').each((idx, el) => {\r\n\t\t\tconst $checkbox = $(el);\r\n\t\t\tif ($checkbox.prop('checked') === state) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t$checkbox.click();\r\n\t\t});\r\n\t\tself.toggling = false;\r\n\t}\r\n\r\n\treturn self;\r\n});\r\n"]}